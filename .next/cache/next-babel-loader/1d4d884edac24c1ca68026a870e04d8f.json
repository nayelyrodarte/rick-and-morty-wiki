{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nayely Rodarte\\\\Desktop\\\\rick-and-morty-wiki\\\\pages\\\\character\\\\[id].js\";\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport StatusBar from 'C:/Users/Nayely Rodarte/Desktop/rick-and-morty-wiki/components/StatusBar';\n\nfunction characterProfile(props) {\n  const {\n    name,\n    image,\n    status,\n    species,\n    location\n  } = character;\n  const router = useRouter();\n  const id = router.query;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: `${name} avatar`,\n      className: styles.img\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatusBar, {\n      status: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: species\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: location.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\ncharacterProfile.getInitialProps = async ctx => {\n  let res = await axios.get(`https://rickandmortyapi.com/api/character/${ctx.query.id}`);\n  let data = res.data;\n  console.log(data);\n  return {\n    data\n  };\n};\n\nexport default characterProfile;","map":{"version":3,"sources":["C:/Users/Nayely Rodarte/Desktop/rick-and-morty-wiki/pages/character/[id].js"],"names":["React","useRouter","axios","StatusBar","characterProfile","props","name","image","status","species","location","character","router","id","query","styles","img","getInitialProps","ctx","res","get","data","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,0EAAtB;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,OAAvB;AAAgCC,IAAAA;AAAhC,MAA6CC,SAAnD;AACA,QAAMC,MAAM,GAAGX,SAAS,EAAxB;AACA,QAAMY,EAAE,GAAGD,MAAM,CAACE,KAAlB;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEP,KAAV;AAAiB,MAAA,GAAG,EAAG,GAAED,IAAK,SAA9B;AAAwC,MAAA,SAAS,EAAES,MAAM,CAACC;AAA1D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIV;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEE;AAAnB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,gBAAIC,QAAQ,CAACJ;AAAb;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;AAEDF,gBAAgB,CAACa,eAAjB,GAAmC,MAAOC,GAAP,IAAe;AAChD,MAAIC,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CACb,6CAA4CF,GAAG,CAACJ,KAAJ,CAAUD,EAAG,EAD5C,CAAhB;AAGA,MAAIQ,IAAI,GAAGF,GAAG,CAACE,IAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CARD;;AAUA,eAAejB,gBAAf","sourcesContent":["import React from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport axios from 'axios';\r\nimport StatusBar from 'C:/Users/Nayely Rodarte/Desktop/rick-and-morty-wiki/components/StatusBar';\r\n\r\nfunction characterProfile(props) {\r\n  const { name, image, status, species, location } = character;\r\n  const router = useRouter();\r\n  const id = router.query;\r\n\r\n  return (\r\n    <div>\r\n      <img src={image} alt={`${name} avatar`} className={styles.img} />\r\n      <p>{name}</p>\r\n      <StatusBar status={status} />\r\n      <p>{species}</p>\r\n      <p>{location.name}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\ncharacterProfile.getInitialProps = async (ctx) => {\r\n  let res = await axios.get(\r\n    `https://rickandmortyapi.com/api/character/${ctx.query.id}`\r\n  );\r\n  let data = res.data;\r\n  console.log(data);\r\n\r\n  return { data };\r\n};\r\n\r\nexport default characterProfile;\r\n"]},"metadata":{},"sourceType":"module"}