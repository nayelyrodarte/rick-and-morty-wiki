{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nayely Rodarte\\\\Desktop\\\\rick-and-morty-wiki\\\\pages\\\\character\\\\[id].js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { Grid } from '@material-ui/core';\nimport MainContainer from '../../components/MainContainer';\nimport StatusBar from '../../components/StatusBar';\nimport { makeStyles } from '@material-ui/styles';\nconst idCharacterStyles = makeStyles({\n  root: {\n    margin: '2em 0em',\n    fontFamily: 'Roboto'\n  },\n  breadcrumbs: {\n    margin: '2em 0',\n    textAlign: 'center'\n  },\n  link: {\n    color: 'black'\n  },\n  title: {\n    fontSize: '2em',\n    fontWeight: 'bold'\n  },\n  grid: {\n    flexGrow: 1,\n    borderRadius: '20px',\n    textAlign: 'center',\n    justifySelf: 'center',\n    margin: 'auto',\n    boxShadow: '4px 2px 5px -3px #000000'\n  },\n  bold: {\n    fontWeight: 'bold'\n  },\n  card: {\n    backgroundColor: '#ebe8ce',\n    borderRadius: '20px',\n    padding: '1.5em'\n  }\n});\n\nfunction characterProfile(props) {\n  const styles = idCharacterStyles();\n  const router = useRouter();\n  const id = router.query;\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.root,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.breadcrumbs,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          href: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: styles.link,\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.bold,\n          children: [\" / \", props.data.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 10,\n        sm: 8,\n        md: 6,\n        lg: 6,\n        className: styles.grid,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.card,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: props.data.image,\n            alt: props.data.name,\n            width: \"60%\",\n            style: {\n              borderRadius: '50%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: props.data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StatusBar, {\n              status: props.data.status,\n              style: {\n                width: '50%',\n                color: 'white'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: \"Gender:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), props.data.gender]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: \"Origin:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), props.data.origin.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: \"Last known location:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), props.data.location.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Consequuntur impedit tempore, perferendis sint consectetur corrupti sunt aperiam deleniti veritatis non incidunt, debitis distinctio ut numquam pariatur nisi architecto, neque iusto?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: '#155799',\n            width: '8em',\n            height: '2em',\n            display: 'block',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            marginTop: '2em',\n            border: 'none',\n            borderRadius: '10px',\n            color: 'white'\n          },\n          children: \"Go back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\ncharacterProfile.getInitialProps = async ctx => {\n  let res = await axios.get(`https://rickandmortyapi.com/api/character/${ctx.query.id}`);\n  let data = res.data;\n  console.log(data);\n  return {\n    data\n  };\n};\n\nexport default characterProfile;","map":{"version":3,"sources":["C:/Users/Nayely Rodarte/Desktop/rick-and-morty-wiki/pages/character/[id].js"],"names":["React","axios","useRouter","Link","Grid","MainContainer","StatusBar","makeStyles","idCharacterStyles","root","margin","fontFamily","breadcrumbs","textAlign","link","color","title","fontSize","fontWeight","grid","flexGrow","borderRadius","justifySelf","boxShadow","bold","card","backgroundColor","padding","characterProfile","props","styles","router","id","query","data","name","image","status","width","gender","origin","location","background","height","display","marginLeft","marginRight","marginTop","border","getInitialProps","ctx","res","get","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'next/router';\r\nimport Link from 'next/link';\r\nimport { Grid } from '@material-ui/core';\r\nimport MainContainer from '../../components/MainContainer';\r\nimport StatusBar from '../../components/StatusBar';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst idCharacterStyles = makeStyles({\r\n  root: {\r\n    margin: '2em 0em',\r\n    fontFamily: 'Roboto',\r\n  },\r\n  breadcrumbs: {\r\n    margin: '2em 0',\r\n    textAlign: 'center',\r\n  },\r\n  link: {\r\n    color: 'black',\r\n  },\r\n  title: {\r\n    fontSize: '2em',\r\n    fontWeight: 'bold',\r\n  },\r\n  grid: {\r\n    flexGrow: 1,\r\n    borderRadius: '20px',\r\n    textAlign: 'center',\r\n    justifySelf: 'center',\r\n    margin: 'auto',\r\n    boxShadow: '4px 2px 5px -3px #000000',\r\n  },\r\n  bold: {\r\n    fontWeight: 'bold',\r\n  },\r\n  card: {\r\n    backgroundColor: '#ebe8ce',\r\n    borderRadius: '20px',\r\n    padding: '1.5em',\r\n  },\r\n});\r\n\r\nfunction characterProfile(props) {\r\n  const styles = idCharacterStyles();\r\n  const router = useRouter();\r\n  const id = router.query;\r\n\r\n  return (\r\n    <MainContainer>\r\n      <div className={styles.root}>\r\n        <p className={styles.breadcrumbs}>\r\n          <Link href='/'>\r\n            <a className={styles.link}>Home</a>\r\n          </Link>\r\n          <span className={styles.bold}> / {props.data.name}</span>\r\n        </p>\r\n\r\n        <Grid item xs={10} sm={8} md={6} lg={6} className={styles.grid}>\r\n          <div className={styles.card}>\r\n            <img\r\n              src={props.data.image}\r\n              alt={props.data.name}\r\n              width='60%'\r\n              style={{\r\n                borderRadius: '50%',\r\n              }}\r\n            />\r\n            <p\r\n              style={{\r\n                fontWeight: 'bold',\r\n              }}\r\n            >\r\n              {props.data.name}\r\n            </p>\r\n            <div>\r\n              <span\r\n                style={{\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Status:\r\n              </span>\r\n              <StatusBar\r\n                status={props.data.status}\r\n                style={{ width: '50%', color: 'white' }}\r\n              />\r\n            </div>\r\n            <p>\r\n              <p\r\n                style={{\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Gender:\r\n              </p>\r\n              {props.data.gender}\r\n            </p>\r\n            <p>\r\n              <p\r\n                style={{\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Origin:\r\n              </p>\r\n              {props.data.origin.name}\r\n            </p>\r\n            <p>\r\n              <p\r\n                style={{\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Last known location:\r\n              </p>\r\n              {props.data.location.name}\r\n            </p>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Consequuntur impedit tempore, perferendis sint consectetur\r\n              corrupti sunt aperiam deleniti veritatis non incidunt, debitis\r\n              distinctio ut numquam pariatur nisi architecto, neque iusto?\r\n            </p>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Link href='/'>\r\n          <button\r\n            style={{\r\n              background: '#155799',\r\n              width: '8em',\r\n              height: '2em',\r\n              display: 'block',\r\n              marginLeft: 'auto',\r\n              marginRight: 'auto',\r\n              marginTop: '2em',\r\n              border: 'none',\r\n              borderRadius: '10px',\r\n              color: 'white',\r\n            }}\r\n          >\r\n            Go back\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </MainContainer>\r\n  );\r\n}\r\n\r\ncharacterProfile.getInitialProps = async (ctx) => {\r\n  let res = await axios.get(\r\n    `https://rickandmortyapi.com/api/character/${ctx.query.id}`\r\n  );\r\n  let data = res.data;\r\n  console.log(data);\r\n\r\n  return { data };\r\n};\r\n\r\nexport default characterProfile;\r\n"]},"metadata":{},"sourceType":"module"}